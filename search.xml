<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vue3+vite2构建项目</title>
      <link href="/2022/08/22/vue3-vite2-gou-jian-xiang-mu/"/>
      <url>/2022/08/22/vue3-vite2-gou-jian-xiang-mu/</url>
      
        <content type="html"><![CDATA[<h3 id="1-sass"><a href="#1-sass" class="headerlink" title="1. sass"></a>1. sass</h3><pre class="line-numbers language-none"><code class="language-none">npm install --save-dev sass<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-获取浏览器兼容"><a href="#2-获取浏览器兼容" class="headerlink" title="2. 获取浏览器兼容"></a>2. 获取浏览器兼容</h3><pre class="line-numbers language-none"><code class="language-none">npm i @vitejs/plugin-legacy --save-dev   获取传统浏览器对scrapt标签的支持import legacy from '@vitejs/plugin-legacy'export default {  plugins: [    legacy({      targets: ['chrome 52', 'not IE 11'],      additionalLegacyPolyfills: ['regenerator-runtime/runtime']    })  ]}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-postcss-config-js"><a href="#3-postcss-config-js" class="headerlink" title="3. postcss.config.js"></a>3. postcss.config.js</h3><p>postcss 常用插件</p><ul><li>autoprefixer是PostCSS最著名的一款插件，就不过多介绍了，相信同学们都使用过</li><li>postcss-cssnext (内置autoprefixer) 允许你使用未来的css语法，如css4（可以理解为css中的Babel）</li><li>postcss-sprites 自动制作雪碧图，不用手动拼接啦，哈哈哈</li><li>cssnano 压缩css代码(如果你是用webpack的话，css-loader集成了cssnano，你不需要再次引入)</li><li>postcss-hash-classname 把转换后的css文件名附上哈希值</li><li>pixrem 将rem转换为px</li><li>postcss-px-to-viewport 将px转换为vh和vw（推荐作为移动端的计量单位，而不是rem）</li><li>postcss-pxtorem 将px转换为rem</li></ul><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">-</span> npm install postcss postcss<span class="token operator">-</span>pxtorem <span class="token operator">--</span>save<span class="token operator">-</span>dev    px生成css<span class="token operator">-</span> npm install <span class="token operator">--</span>save <span class="token operator">-</span>dev autoprefixer          处理<span class="token constant">CSS</span>前缀问题的神器<span class="token comment">// postcss.config.js</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token literal-property property">autoprefixer</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token literal-property property">overrideBrowserslist</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token string">'Android 4.1'</span><span class="token punctuation">,</span>        <span class="token string">'iOS 7.1'</span><span class="token punctuation">,</span>        <span class="token string">'Chrome &gt; 31'</span><span class="token punctuation">,</span>        <span class="token string">'ff &gt; 31'</span><span class="token punctuation">,</span>        <span class="token string">'ie &gt;= 8'</span><span class="token punctuation">,</span>        <span class="token string">'last 10 versions'</span> <span class="token comment">// 所有主流浏览器最近10版本用</span>      <span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token literal-property property">grid</span><span class="token operator">:</span> <span class="token boolean">true</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token string-property property">'postcss-pxtorem'</span><span class="token operator">:</span> <span class="token punctuation">{</span>      <span class="token literal-property property">rootValue</span><span class="token operator">:</span> <span class="token number">14</span><span class="token punctuation">,</span>      <span class="token literal-property property">propList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'*'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token literal-property property">unitPrecision</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>      <span class="token comment">// 'video-js'</span>      <span class="token literal-property property">selectorBlackList</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'echarts_'</span><span class="token punctuation">,</span> <span class="token string">'lds-ripple-spinner'</span><span class="token punctuation">]</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-eslist-prettier"><a href="#4-eslist-prettier" class="headerlink" title="4. eslist+prettier"></a>4. eslist+prettier</h3><p>于 vetur 完全支持了 prettier 的格式化风格，所以 vue 提倡使用 prettier 而不是 eslint 来格式化代码。为了解决 eslint 规则和 prettier 规则的冲突，就要用到 eslint-config-prettier 依赖包。<br>使用 eslint-config-prettier 禁用所有与格式化相关的 ESLint 规则后，需要在根目录下新建 prettier 的配置文件，本文创建的是 prettier.config.js 文件。在 .eslintrc.js 文件的 extends 中，通过 plugin:prettier/recommended 属性，将 prettier.config.js 文件中的配置合并到 .eslintrc.js 文件中。需要注意的是，plugin:prettier/recommended 必须作为你的最后一个扩展。<br>在 vite 配置文件中，同一属性下，后引入的规则会覆盖前面的规则。</p><h4 id="4-1-推荐的依赖包"><a href="#4-1-推荐的依赖包" class="headerlink" title="4.1 推荐的依赖包"></a>4.1 推荐的依赖包</h4><ul><li>eslint</li><li><a href="https://eslint.vuejs.org/">eslint-plugin-vue</a>：Vue.js 的官方 ESLint 插件，它允许我们使用 ESLint 检查文件中的 Vue 代码。</li><li><a href="https://www.npmjs.com/package/vue-eslint-parser">vue-eslint-parser</a>：文件的 ESLint 自定义解析器.vue。</li><li><a href="https://www.npmjs.com/package/prettier">prettier</a>：代码格式化程序</li><li><a href="https://www.npmjs.com/package/eslint-plugin-prettier">eslint-plugin-prettier</a>：<ul><li>将 Prettier 作为 ESLint 规则运行。</li><li>如果你想禁用与代码格式相关的所有其他 ESLint 规则，并且仅启用检测潜在错误的规则，则此插件效果最佳。</li><li>如果你安装了 eslint 那么你应该会遇到 eslint 规则和 prettier 规则冲突。可用 eslint-config-prettier 解决 eslint 规则和 prettier 规则的冲突。</li></ul></li><li><a href="https://github.com/prettier/eslint-config-prettier">eslint-config-prettier</a>：关闭所有不必要或可能与 Prettier 冲突的规则。</li></ul><pre class="line-numbers language-none"><code class="language-none">npm install --save-dev eslintnpm install --save-dev eslint-plugin-vue vue-eslint-parsernpm install --save-dev prettier eslint-plugin-prettier eslint-config-prettier<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="4-2-步骤"><a href="#4-2-步骤" class="headerlink" title="4.2 步骤"></a>4.2 步骤</h4><ol><li> 配置.eslintrc.js</li></ol><ul><li>npx eslint –init</li></ul><p><img src="C:\Users\user\AppData\Roaming\Typora\typora-user-images\image-20220818110401364.png" alt="image-20220818110401364"></p><ul><li>vue的官方eslint插件配置: <a href="https://eslint.vuejs.org/rules/">https://eslint.vuejs.org/rules/</a></li></ul><pre class="line-numbers language-none"><code class="language-none">extends: ["eslint:recommended", "plugin:vue/vue3-recommended"],parser: "vue-eslint-parser",<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>eslint官方rules配置规则：<a href="http://eslint.cn/docs/rules/">http://eslint.cn/docs/rules/</a></li></ul><ol start="2"><li>配置.eslintignore</li></ol><pre class="line-numbers language-none"><code class="language-none">*.sh*.md*.woff*.ttf.vscode.idea.husky.localdistnode_modulesDockerfile/public/docs/bin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>配置</li></ol><pre class="line-numbers language-none"><code class="language-none">module.exports = {  printWidth: 100, // 最大行长规则通常设置为 100 或 120。  tabWidth: 2, // 指定每个标签缩进级别的空格数。  useTabs: false, // 使用制表符而不是空格缩进行。  semi: false, // true（默认）: 在每条语句的末尾添加一个分号。false：仅在可能导致 ASI 失败的行的开头添加分号。  vueIndentScriptAndStyle: true, // Vue 文件脚本和样式标签缩进  singleQuote: true, // 使用单引号而不是双引号  quoteProps: 'as-needed', // 引用对象中的属性时，仅在需要时在对象属性周围添加引号。  bracketSpacing: true, // 在对象文字中的括号之间打印空格。  trailingComma: 'none', // "none":没有尾随逗号。"es5": 在 ES5 中有效的尾随逗号（对象、数组等），TypeScript 中的类型参数中没有尾随逗号。"all"- 尽可能使用尾随逗号。  bracketSameLine: false, // 将&gt;多行 HTML（HTML、JSX、Vue、Angular）元素放在最后一行的末尾，而不是单独放在下一行（不适用于自闭合元素）。  jsxSingleQuote: false, // 在 JSX 中使用单引号而不是双引号。  arrowParens: 'always', // 在唯一的箭头函数参数周围始终包含括号。  insertPragma: false, // 插入编译指示  requirePragma: false, // 需要编译指示  proseWrap: 'never', // 如果散文超过打印宽度，则换行  htmlWhitespaceSensitivity: 'strict', // 所有标签周围的空格（或缺少空格）被认为是重要的。  endOfLine: 'lf', // 确保在文本文件中仅使用 ( \n)换行，常见于 Linux 和 macOS 以及 git repos 内部。  rangeStart: 0, // 格式化文件时，回到包含所选语句的第一行的开头。};<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="4"><li>配置 .prettierignore ：<a href="https://prettier.io/docs/en/options.html">https://prettier.io/docs/en/options.html</a></li></ol><pre class="line-numbers language-none"><code class="language-none">/dist/*/public/*/node_modules/**.local.output.js**/*.svg**/*.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-其他"><a href="#5-其他" class="headerlink" title="5. 其他"></a>5. 其他</h3><pre class="line-numbers language-none"><code class="language-none">// 进度条npm install --save nprogress<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>【参考文献】</p><p><a href="https://blog.csdn.net/mChales_Liu/article/details/124324862">https://blog.csdn.net/mChales_Liu/article/details/124324862</a></p><p><a href="https://juejin.cn/post/7043702363156119565">https://juejin.cn/post/7043702363156119565</a></p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> vite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/02/21/hello-world/"/>
      <url>/2022/02/21/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
